---
- name: Build Kubernetes HA Cluster
  hosts: all
  remote_user: bosmith
  become: true

  tasks:

  - name: Disable swap - realtime
    shell: |
      swapoff -a

  - name: Disable swap - /etc/fstab
    lineinfile:
      path: /etc/fstab
      regexp: '^.*swap.*'
      state: absent

  - name: Install Prerequisites
    package:
      name: 
        - apt-transport-https
        - ca-certificates
        - containerd
        - curl
        - vim
      state: latest

  - name: Create containerd config
    shell: |
      mkdir -p /etc/containerd
      containerd config default | sudo tee /etc/containerd/config.toml
    args:
      creates: /etc/containerd/config.toml

  - name: Setup System
    shell: |
      curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
      echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
      apt update

  - name: Load Module - overlay
    modprobe:
      name: overlay
      state: present

  - name: Load Module - br_netfilter
    modprobe:
      name: br_netfilter
      state: present

  - name: Set Kernel net.bridge.bridge-nf-call-iptables
    sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: '1'
      state: present
      sysctl_set: true

  - name: Set Kernel net.bridge.bridge-nf-call-iptables6
    sysctl:
      name: net.bridge.bridge-nf-call-ip6tables
      value: '1'
      state: present
      sysctl_set: true

  - name: Set Kernel net.ipv4.ip_forward
    sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      state: present
      sysctl_set: true

  - name: Install Kubernetes Packages
    package:
      name:
        - kubelet
        - kubeadm
        - kubectl

  - name: Lock Packages
    shell: apt-mark hold kubelet kubeadm kubectl

  - name: Initialize Master
    shell: |
      cat << EOF > kubeadm-config.yaml
      # kubeadm-config.yaml
      kind: ClusterConfiguration
      apiVersion: kubeadm.k8s.io/v1beta3
      kubernetesVersion: v1.27.0
      ---
      kind: KubeletConfiguration
      apiVersion: kubelet.config.k8s.io/v1beta1
      cgroupDriver: systemd
      EOF

      kubeadm init --config kubeadm-config.yaml

      touch /opt/kubernetes-initialized
    args:
      creates: /opt/kubernetes-initialized
    when: "'k8s-master1' in inventory_hostname"

  - name: Deploy Calico
    shell: |
      mkdir -p /root/.kube
      cp /etc/kubernetes/admin.conf /root/.kube/config
      export KUBECONFIG="/etc/kubernetes/admin.conf"
      kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/tigera-operator.yaml
      kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/custom-resources.yaml 
    when: "'k8s-master1' in inventory_hostname"

  - name: Create Kubernetes Join Token
    shell: kubeadm token create --print-join-command
    register: kubeadm_join_command

  - debug:
      msg: "{{ kubeadm_join_command.stdout }}"

  - name: Copy join command to local file
    local_action: 
      module: copy 
      content: "{{ kubernetes_join_command.stdout_lines[0] }}"
      dest: "/tmp/kubernetes_join_command"
      mode: 0777

  - name: Copy join command
    copy:
      src: /tmp/kubernetes_join_command
      dest: /tmp/kubernetes_join_command
      mode: 0777
    when: 
      - "'master' in group_names"
      - "'k8s-master1' not in inventory_hostname"

  - name: Join Cluster
    shell: |
      sh /tmp/kubernetes_join_command
    register: joined_or_not
    when: 
      - "'master' in group_names"
      - "'k8s-master1' not in inventory_hostname"

  - debug:
      msg: "{{ joined_or_not }}"